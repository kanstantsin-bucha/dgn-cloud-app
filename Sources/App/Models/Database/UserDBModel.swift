//
//  UserDBModel.swift
//  
//
//  Created by Kanstantsin Bucha on 21/11/2022.
//

import Foundation
import Fluent
import Vapor

fileprivate enum UserDBKeys: String {
    case devicesIDs
    case updatedAt
    case loggedInAt
    
    var key: FieldKey {
        return .string(self.rawValue)
    }
}

// {data: {"devicesIds": ["0MLwpEtAKkTSU54f"]}, "createdAt":1640236388,"_id":"0MLwpEtAKkTSU54f"}]}

public final class UserDBModel: Model, CustomStringConvertible {
    // Name of the table or collection.
    public static let schema = "users"

    // MARK: - Autogenerated On Save
    
    @ID(key: .id)
    public var id: UUID?
    
    @Field(key: UserDBKeys.updatedAt.key)
    public var updatedAt: Date?
    
    // MARK: - Data Fields
    
    @Field(key: UserDBKeys.loggedInAt.key)
    public var loggedInAt: Date?
    
    @Field(key: UserDBKeys.devicesIDs.key)
    public var devicesIDs: [UUID]?

    public var description: String {
        return """
            <UserDBModel id: \(String(describing: id)), updatedAt: \(String(describing: updatedAt)), \
            data: loggedInAt: \(String(describing: loggedInAt)), devicesIDs: \(String(describing: devicesIDs))>
            """
    }
    
    public init() {}

    public init(_ model: UserAPIModel) {
        id = model.id ?? UUID()
        updatedAt = Date()
        let data = model.data
        devicesIDs = data.devicesIDs
    }
}

struct CreateUsersTableMigration: AsyncMigration {
    func prepare(on database: Database) async throws {
        print("prepare CreateDeviceReportsTableMigration started")
        try await database.schema(DeviceReportDBModel.schema)
            .id()
            .field(UserDBKeys.updatedAt.key, .datetime)
            .field(UserDBKeys.loggedInAt.key, .datetime)
            .field(UserDBKeys.devicesIDs.key, .array(of: .uuid))
            .create()
        
        print("prepare CreateDeviceReportsTableMigration finished")
    }
    
    func revert(on database: Database) async throws {
        print("revert CreateDeviceReportsTableMigration")
    }
}
